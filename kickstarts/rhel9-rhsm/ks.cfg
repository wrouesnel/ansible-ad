# Generated by Anaconda 34.25.5.17
# Generated by pykickstart v3.32
#version=RHEL9
# Use graphical install
graphical
repo --name="AppStream" --baseurl=file:///run/install/sources/mount-0000-cdrom/AppStream

%addon com_redhat_kdump --disable

%end

%addon com_redhat_oscap
    content-type = scap-security-guide
    datastream-id = scap_org.open-scap_datastream_from_xccdf_ssg-rhel9-xccdf.xml
    xccdf-id = scap_org.open-scap_cref_ssg-rhel9-xccdf.xml
    profile = xccdf_org.ssgproject.content_profile_stig
%end

# Keyboard layouts
keyboard --xlayouts='au'
# System language
lang en_AU.UTF-8

# Network information
network  --bootproto=static --device=ens3 --gateway=192.168.122.1 --ip=192.168.122.4 --nameserver=192.168.122.2 --netmask=255.255.255.0 --noipv6 --activate --ipv4-dns-search=default.libvirt
network  --hostname=rhsm

# Use CDROM installation media
cdrom

%packages
# Server product
@^server-product-environment
aide
audispd-plugins
audit
chrony
cronie
crypto-policies
fapolicyd
firewalld
gnutls-utils
libreswan
nss-tools
opensc
openscap
openscap-scanner
openssh-clients
openssh-server
openssl-pkcs11
pcsc-lite
policycoreutils
policycoreutils-python-utils
rng-tools
rsyslog
rsyslog-gnutls
s-nail
scap-security-guide
subscription-manager
sudo
usbguard
-iprutils
-nfs-utils
-quagga
-rsh-server
-sendmail
-telnet-server
-tftp-server
-tuned
-vsftpd
-xorg-x11-server-Xorg
-xorg-x11-server-Xwayland
-xorg-x11-server-common
-xorg-x11-server-utils
-ypserv
# TPM
tpm2-tss
tpm2-pkcs11
# Clevis
clevis
clevis-dracut
clevis-luks
clevis-pin-tpm2
# Test Environment Helpers
qemu-guest-agent
%end

# Run the Setup Agent on first boot
firstboot --disable

# Generated using Blivet version 3.6.0
ignoredisk --only-use=vda
# Partition clearing information
clearpart --none --initlabel
# Disk partitioning information
part /boot/efi --fstype="efi" --ondisk=vda --size=2048 --fsoptions="umask=0077,shortname=winnt"
part pv.342 --fstype="lvmpv" --ondisk=vda --size=98302 --encrypted --passphrase=defaultpassword --luks-version=luks2
part /boot --fstype="xfs" --ondisk=vda --size=2048
volgroup rhel --pesize=4096 pv.342
logvol /var/log --fstype="xfs" --size=2048 --name=var_log --vgname=rhel
logvol / --fstype="xfs" --size=40960 --name=root --vgname=rhel
logvol /var --fstype="xfs" --size=30720 --name=var --vgname=rhel
logvol /var/log/audit --fstype="xfs" --size=10240 --name=var_log_audit --vgname=rhel
logvol /var/tmp --fstype="xfs" --size=2048 --name=var_tmp --vgname=rhel
logvol /home --fstype="xfs" --size=10232 --name=home --vgname=rhel
logvol /tmp --fstype="xfs" --size=2048 --name=tmp --vgname=rhel

# System timezone
timezone Australia/Sydney --utc

# Root password
rootpw --plaintext defaultpassword

# Firewall
firewall --enabled --service=ssh --service=dns --service=dhcp --service=http --service=https --port=5647:tcp --port=8000:tcp --port=9090:tcp --port=8140:tcp

# Reboot when the install is finished.
reboot

%post --interpreter=/bin/bash
echo "Check for OEMDRV"
if [ -e /dev/disk/by-label/OEMDRV ]; then
    echo "Create /mnt/OEMDRV"
    mkdir /mnt/OEMDRV
    echo "Mount OEMDRV"
    if ! mount /dev/disk/by-label/OEMDRV /mnt/OEMDRV; then
        echo "Could not mount OEMDRV"
        exit 1
    fi
fi

# If an alternate /etc/issue file was supplied, then install it.
if [ -e /mnt/OEMDRV/issue ]; then
    cp -f /mnt/OEMDRV/issue /etc/issue
fi

if [ -e /mnt/OEMDRV/issue.net ]; then
    cp -f /mnt/OEMDRV/issue.net /etc/issue.net
fi

# Install any included certificates as root trust
while read -r filename; do
    cp -f "$filename" /etc/pki/ca-trust/source/anchors/
done < <(find -name '*.crt' -type f /mnt/OEMDRV)
update-ca-trust

# Disable first-boot password aging
chage -I -1 -m 0 -M -1 -E -1 root

# Ensure PermitRootLogin is on in sshd (security policy disables it but then we can't provision)
sed -i 's/PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config /etc/ssh/sshd_config.d/*

# Convert the LUKS encrypted volume to be encrypted with the TPM, set to
# PCR 7 - this locks the hard disk to the machine it is plugged into.

echo "Create /etc/dracut.conf.d/10-tpm.conf"
cat << EOF > /etc/dracut.conf.d/10-bash.conf
add_dracutmodules+=" bash "
EOF

cat << EOF > /etc/dracut.conf.d/10-tpm.conf
add_dracutmodules+=" tpm2-tss "
install_items+=" /etc/crypttab "
EOF

# Find LUKS volumes
luks_devices=()
while read -r blockdev; do
    if cryptsetup luksDump "${blockdev}"; then
        luks_devices+=( "$blockdev" )
    fi
done < <( find /dev/disk/by-uuid )

# Bind this node to both the TPM and the Tang server
if mountpoint /mnt/OEMDRV ; then
    source /mnt/OEMDRV/tang.env
else
    echo "Did not find a tang environment file."
    exit 1
fi

_tmp_clevis_cfg=$(mktemp)
    cat << EOF > "${_tmp_clevis_cfg}"
{
  "t": 2,
  "pins": {
    "tpm2": {
      "pcr_ids": "7"
    },
    "tang": {
      "url": "placeholder_url",
      "thp": "placeholder_thp"
    }
  }
}
EOF

# Rebuild crypttab
printf "# TARGET\tSOURCE\tKEYFILE\tOPTIONS\n" > /etc/crypttab
for blockdev in "${luks_devices[@]}"; do
    uuid="$(basename "$blockdev")"

    clevis_cfg=$(jq \
        --arg tang_server "$TANG_SERVER" \
        --arg tang_thp "$TANG_THP" \
        '.pins.tang.url |= $tang_server | .pins.tang.thp |= $tang_thp' < "${_tmp_clevis_cfg}")

    # Enroll with Clevis and Tang
    echo "defaultpassword" | \
        clevis luks bind -y -k - -d "${blockdev}" sss "${clevis_cfg}"

    printf "%s\t%s\t%s\t%s\n" \
        "luks-${uuid}" "UUID=$(basename "$blockdev")" "none" "luks,discard" \
        >> /etc/crypttab 
done

# Note: network config in our weird environment is a problem. With DHCP it seems okay.
grubby --update-kernel=ALL --args="rd.neednet=1 nameserver=192.168.122.2"

# Update NetworkManager config to handle early networking
cat << EOF > /etc/NetworkManager/conf.d/00-system.conf
[device]
keep-configuration=no
allowed-connections=except:origin:nm-initrd-generator
EOF

echo "Rebuild dracut.conf"
dracut -fv --regenerate-all

# Copy the CDROM media to the local disk
source /etc/os-release

# Configure repositories
mkdir /mnt/cdrom
mount /dev/sr0 /mnt/cdrom
mkdir "/srv/rhel${VERSION_ID%%.*}"
rsync -rv -W /mnt/cdrom/ "/srv/rhel${VERSION_ID%%.*}/"

# Configure repositories
cat << EOF > "/etc/yum.repos.d/rhel${VERSION_ID%%.*}.repo"
[RHEL${VERSION_ID%%.*}-BaseOS]
name=Red Hat Enterprise Linux ${VERSION_ID} BaseOS
mediaid=None
metadata_expire=-1
gpgcheck=1
cost=500
baseurl=file:///srv/rhel${VERSION_ID%%.*}/BaseOS/

[RHEL${VERSION_ID%%.*}-AppStream]
name=Red Hat Enterprise Linux ${VERSION_ID} Appstream
mediaid=None
metadata_expire=-1
gpgcheck=1
cost=500
baseurl=file:///srv/rhel${VERSION_ID%%.*}/AppStream/
EOF

# Import the GPG keys to RPM
rpm --import /srv/rhel${VERSION_ID%%.*}/RPM-GPG-KEY-redhat-release

%end