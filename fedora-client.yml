- hosts: fedora_clients
  become: yes
  tasks:
  - name: Check if the python-libdnf5 module is available
    package:
      name:
      - python-libdnf5
      state: present
    ignore_errors: true
    register: need_manual_package
  
  - name: Install python-libdnf5
    command: dnf install -y python-libdnf5
    when: need_manual_package.failed|default(false) == true

  - name: Ensure selinux works with CIFS dirs
    command: setsebool -P use_samba_home_dirs 1

  # There's an alert about polyinstantiation which is probably just a bug due to pam_mount overmounting .cache

  - name: Install pre-requisite packages
    package:
      name:
      - krb5-workstation
      - gdm
      - sssd-tools
      - tlog

  - name: Remove lightdm
    package:
      name:
      - slick-greeter
      - slick-greeter-cinnamon
      - lightdm
      - lightdm-settings
      - lightdm-gobject
      state: absent

  - name: Disable systemd-home
    service:
      name: systemd-homed
      state: stopped
      enabled: false

  # check for realm membership

  # join realm

# THIS: THIS IS HOW YOU GET HOME DIRECTORIES TO WORK. USE PAM_MOUNT.
# <volume sgrp="domain users@default.libvirt"
#     fstype="cifs"
#     server="server-1.default.libvirt"
#     path="Users$/%(USER)"
#     mountpoint="/home/%(USER)"
#     options="sec=krb5i,cruid=%(USERUID),vers=3.0"
# />

  - name: Ensure a /usr/local/sbin dir exists
    file:
      path: /usr/local/sbin
      state: directory
      mode: "0755"
      owner: root
      group: root

  - name: Configure SELinux
    command: "{{item}}"
    loop:
    - semanage fcontext -a -t root_t /usr/local/sbin
    - restorecon -v /usr/local/sbin

  - name: Install the local home directories script
    copy:
      src: files/usr/local/sbin/create-local-homedir.sh
      dest: /usr/local/sbin/create-local-homedir.sh
      mode: "0755"
      owner: root
      group: root

  - name: Install the local home directories script for GDM
    copy:
      src: files/usr/local/sbin/create-local-homedir.sh
      dest: /usr/local/sbin/create-local-homedir-gdm.sh
      mode: "0755"
      owner: root
      group: root

  - name: Configure SELinux
    command: "{{item}}"
    loop:
    - semanage fcontext -a -t xdm_unconfined_exec_t /usr/local/sbin/create-local-homedir-gdm.sh
    - restorecon -v /usr/local/sbin/create-local-homedir-gdm.sh

  - name: Check if custom profile exists
    command: authselect show custom/sssd-ext
    failed_when: false
    register: authselect_result

  - name: Setup an extended sssd authselect profile
    command: authselect create-profile -b sssd --symlink-nsswitch --symlink-dconf sssd-ext
    when: authselect_result.rc != 0

  - name: Edit the profile
    copy:
      src: files/authselect/sssd-ext/{{item}}
      dest: /etc/authselect/custom/sssd-ext/{{item}}
      mode: "0644"
      owner: root
      group: root
    loop:
    - fingerprint-auth 
    - password-auth
    - postlogin
    - README
    - REQUIREMENTS
    - smartcard-auth
    - system-auth

  - name: Enable mmap on files by domains
    command: setsebool -P domain_can_mmap_files 1

  - name: Enable polyinstantiation
    command: setsebool -P polyinstantiation_enabled 1

  - name: Write an SELinux policy extension for the startup system
    copy:
      content: |
        module my-local 1.0;

        require {
          type systemd_logind_inhibit_var_run_t;
          type proc_t;
          type sshd_t;
          type xdm_t;
          class filesystem associate;
          class dir { add_name write };
          class fifo_file getattr;
        }

        #============= sshd_t ==============
        allow sshd_t proc_t:filesystem associate;
        allow sshd_t self:dir { add_name write };

        #============= xdm_t ==============
        allow xdm_t proc_t:filesystem associate;
        allow xdm_t self:dir { add_name write };
        allow xdm_t systemd_logind_inhibit_var_run_t:fifo_file getattr;
      dest: /root/my-local.te
      owner: root
      group: root
      mode: "0600"

  - name: Compile and install the module
    command: "{{item}}"
    loop:
    - /bin/bash -c 'semodule -r my-local || /bin/true'
    - checkmodule -M -m -o my-local.mod my-local.te
    - semodule_package -o my-local.pp -m my-local.mod
    - semodule -X 300 -i my-local.pp

  - name: Ensure cache directory exists
    file:
      path: /var/cache/user
      owner: root
      group: root
      mode: "0755"
      state: directory

  - name: Configure SELinux contexts for altered cache location 
    command: "{{item}}"
    loop:
    - semanage fcontext -a -t cache_home_t /var/cache/user
    - restorecon -v /var/cache/user

  - name: Remap XDG_CACHE_HOME
    lineinfile:
      path: /etc/security/pam_env.conf
      regexp: "^XDG_CACHE_HOME.*"
      line: "XDG_CACHE_HOME\tDEFAULT=\"/var/cache/user/${USER}\""
      state: present

  - name: Configure /etc/environment globally
    lineinfile:
      path: /etc/environment
      line: REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-certificates.crt

  - name: Ensure pam-mount is installed
    package:
      name: pam_mount
      state: present

  - name: Configure pam_mount
    blockinfile:
      path: /etc/security/pam_mount.conf.xml
      insertafter: "\\s*<!--\\s*Volume definitions.*"
      marker: <!-- {mark} ANSIBLE MANAGED BLOCK -->
      block: |
        <volume sgrp="domain users"
            fstype="cifs"
            server="server-1.{{ad.domain_name}}"
            path="Users$/%(USER)"
            mountpoint="/home/%(USER)"
            options="sec=krb5i,cruid=%(USERUID),vers=default,nobrl,mfsymlinks,context=unconfined_u:object_r:user_home_t:s0"
        />

  # https://bugs.launchpad.net/ubuntu/+source/cifs-utils/+bug/1764778
  - name: Configure dconf to work over CIFS
    lineinfile:
      path: /etc/dconf/profile/user
      insertbefore: BOF
      line: service-db:keyfile/user

  - name: Enable the new profile
    command: >-
      authselect select custom/sssd-ext 
        with-libvirt
        with-pam-mount
        with-pam-exec-homedir
        with-pam-gnome-keyring
        with-smartcard
        with-subid
        with-tlog
        with-sudo
  
  - name: Ensure profile is active
    command: authselect apply-changes

  - name: Configure sssd
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: ^services = .*
      line: services = nss, pam, ssh, sudo
      insertafter: "^\\[sssd\\]"
    notify: restart sssd

  - name: Configure sssd
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: ^use_fully_qualified_names = .*
      line: use_fully_qualified_names = False
    notify: restart sssd

  - name: Configure sssd fallback_homedir
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: ^fallback_homedir = .*
      line: fallback_homedir = /home/%u
    notify: restart sssd

  - name: Configure sssd
    lineinfile:
      path: /etc/sssd/sssd.conf
      line: "[pam]"
    notify: restart sssd

  - name: Configure sssd
    lineinfile:
      path: /etc/sssd/sssd.conf
      insertafter: "\\[pam\\]"
      line: pam_cert_auth = True
    notify: restart sssd

  - name: Configure SSH server to use SSSD authorized keys
    copy:
      content: |
        # Site Configuration to use SSSD for known hosts
        AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys
      dest: /etc/ssh/ssh_config.d/90-site.conf
      owner: root
      group: root
      mode: "0644"
    notify: restart sshd

  - name: Configure pam_sss_knownhosts
    copy:
      content: |
        # Site Configuration to use SSSD for known hosts
        GlobalKnownHostsFile /var/lib/sss/pubconf/known_hosts
        ProxyCommand /usr/bin/sss_ssh_knownhostsproxy -p %p %h
      dest: /etc/ssh/ssh_config.d/90-site.conf
      owner: root
      group: root
      mode: "0644"

  - name: Fix csd-color
    command: glib-compile-schemas --targetdir /usr/share/glib-2.0/schemas/ /usr/share/glib-2.0/schemas

  - name: Configure pam_group
    lineinfile:
      path: /etc/security/group.conf
      line: "*;*;%domain users;Al0000-2400;render,audio,video,dialout,colord"

  # [session_recording]
  # TODO
  handlers:
  - name: restart oddjobd
    service:
      name: oddjobd
      state: restarted

  - name: restart sshd
    service:
      name: sshd
      state: restarted
  - name: restart sssd
    service:
      name: sssd
      state: restarted